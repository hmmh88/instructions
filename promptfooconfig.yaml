# Learn more about building a configuration: https://promptfoo.dev/docs/configuration/guide
description: "Evaluate AI assistant for generating IDEAS based on FORMAT, TOPIC, and Existing_IDEAS"

prompts:
  - file://gen_text_system_instruction.txt

providers:
  - id: "vertex:gemini-1.5-flash-001"
    config:
      generationConfig:
        responseMimeType: "application/json"

defaultTest:
  vars:
    prompt: |
      {% if topic %}
      Topic: {{ topic }}
      {% endif %}
      {% if existing_ideas_formatted %}
      Existing_IDEAS: {{ existing_ideas_formatted }}
      {% endif %}
      IDEAS:
  assert:
      # Ensure that the output is valid JSON matching the schema
      - type: is-json
        schema: |
          {
            "type": "object",
            "properties": {
              "rewrite_topic": { "type": "string" },
              "format": { "type": "string" },
              "ideas": { "type": "array", "items": { "type": "string" } }
            },
            "required": ["rewrite_topic", "format", "ideas"]
          }

tests:
  - vars:
      topic: "Travel"
      existing_ideas_formatted: |
        [
          "My favorite place to travel is",
          "Best places to backpack"
        ]

  - vars:
      topic: "Technology"

  - vars:
      existing_ideas_formatted: |
        [
          "The most innovative gadget I own is",
          "Apps I can't live without"
        ]

  - vars: {}
      # No topic or existing ideas

  - vars:
      topic: gen z trends

  - vars:
      topic: travel tips

  - vars:
      topic: anything about marvel movies

  - vars:
      topic: tennis

  - vars:
      topic: skincare

  - vars:
      topic: taylor swift

  - vars:
      topic: science facts

  - vars:
      topic: the simpsons

  - vars:
      topic: fortnight

  - vars:
      topic: that specific feeling you get when you part ways with someone but then begin to walk in the same direction.

  - vars:
      topic: nba players

  - vars:
      topic: best selling albums of all time

  - vars:
      topic: history of video games

  - vars:
      topic: how are movies made

  - vars:
      topic: harry potter trivia

  - vars:
      topic: latest celebrity gossip

  - vars:
      topic: most streamed songs on spotify

  - vars:
      topic: stepping on leaves in the autumn

  - vars:
      topic: reality tv shows

  - vars:
      topic: top 10 comedy movies

  - vars:
      topic: anime references

  - vars:
      topic: who is elon musk

  - vars:
      topic: cooking hacks for beginners

  - vars:
      topic: different types of coffee

  - vars:
      topic: easy home workouts

  - vars:
      topic: fashion trends for fall

  - vars:
      topic: how to get better sleep

  - vars:
      topic: financial tips for early retirement

  - vars:
      topic: productivity tips

  - vars:
      topic: what are dreams

  - vars:
      topic: farm wedding fashion

  - vars:
      topic: tarot

  - vars:
      topic: rules of golf that are weird

  - vars:
      topic: climate change explained

  - vars:
      topic: dinosaur facts

  - vars:
      topic: how do airplanes fly

  - vars:
      topic: what are black holes

  - vars:
      topic: wonders of the world.

  - vars:
      topic: elevator etiquette

  - vars:
      topic: optical illusions

  - vars:
      topic: riddles with answers

  - vars:
      topic: tongue twisters

  - vars:
      topic: rubik's cube

  - vars:
      topic: the best ways to calm down

  - vars:
      topic: science of happiness

  - vars:
      topic: history of ancient egypt

  - vars:
      topic: how to write calligraphy

  - vars:
      topic: best places for stargazing

  - vars:
      topic: The strange satisfaction of perfectly peeling a sticker off in one go.

  - vars:
      topic: My pet watches me while I sleep lol

  - vars:
      topic: acting challenge
    assert:
      - type: javascript
        value: |
          const json = JSON.parse(output);
          const hasQuestions = Object.values(json).some(value => 
            typeof value === 'string' && value.includes('?')
          );
          return !hasQuestions;
